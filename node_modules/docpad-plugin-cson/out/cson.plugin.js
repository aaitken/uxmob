// Generated by CoffeeScript 1.9.0
(function() {
  var __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  module.exports = function(BasePlugin) {
    var CsonPlugin;
    return CsonPlugin = (function(_super) {
      __extends(CsonPlugin, _super);

      function CsonPlugin() {
        return CsonPlugin.__super__.constructor.apply(this, arguments);
      }

      CsonPlugin.prototype.name = 'cson';

      CsonPlugin.prototype.render = function(opts, next) {
        var CSON, config, inExtension, outExtension, result;
        config = this.config;
        inExtension = opts.inExtension, outExtension = opts.outExtension;
        if (inExtension === 'cson' && (outExtension === 'json' || outExtension === null)) {
          CSON = require('cson');
          result = CSON.parseCSONString(opts.content);
          if (result instanceof Error) {
            return next(result);
          }
          result = CSON.createJSONString(result, config);
          if (result instanceof Error) {
            return next(result);
          }
          opts.content = result;
          return next();
        } else {
          return next();
        }
      };

      return CsonPlugin;

    })(BasePlugin);
  };

}).call(this);
